 int Find_max(vector<int>&A, int start, int end){
     int max = A[start];
     int index = start;
     for(int i=start;i<=end;i++){
         if(max<A[i]){
             max = A[i];
             index =i ;
         }
     }
     return index;    
 }
 
 TreeNode* solve (vector<int> &A, int start, int end){
     if(start>end) return NULL;
     int max = Find_max(A,start,end);
     TreeNode* root = new TreeNode(A[max]);
     root->left = solve(A,start,max-1);
     root->right = solve(A,max+1,end);
     return root;
     
     
 }
TreeNode* Solution::buildTree(vector<int> &A) {
    
    TreeNode* ans =solve(A,0,A.size()-1); ;
    
    return ans;
}