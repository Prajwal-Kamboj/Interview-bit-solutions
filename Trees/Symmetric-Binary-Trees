int solve(TreeNode*A,TreeNode*B){
    int temp1=0,temp2=0;
    if(A==NULL and B==NULL ) return 1;
    if(A->val and B->val){
            temp1= solve(A->left,B->right);
            temp2= solve(B->left,A->right);
        
    }
    if(temp1==1 and temp2 == 1) return 1;
    return 0;
}

int Solution::isSymmetric(TreeNode* A) {
    int ans=0;
    if(A->left and A->right){
        if(A->left->val==A->right->val){
            ans= solve(A->left,A->right);
        }
    }
    if(!A->left and !A->right) ans=1;
    return ans;
}